---
import { twMerge } from 'tailwind-merge';
import Image from '../common/Image.astro';

export interface Props {
  images: {
    url: string;
    class?: {
      image?: string;
      container?: string;
    };
  }[];
  containerClass?: string;
}
const { containerClass = await Astro.slots.render('containerClass'), images = [] } = Astro.props;
---

<section
  class={twMerge(
    'grid grid-cols-3 md:grid-cols-2 grid-rows-3 md:grid-rows-2 gap-2 md:gap-5 px-4 lg:px-[120px] py-5 max-w-[1800px] mx-auto',
    containerClass
  )}
>
  {
    images.map((img, index) => (
      <div class={twMerge('col-span-3 md:col-span-1', img.class?.container)}>
        <Image
          src={img.url}
          alt={`image-${index}`}
          class={twMerge('w-full h-full rounded-xl animate-slide-up-delay', img.class?.image)}
          fetchpriority="high"
        />
      </div>
    ))
  }
</section>

<style>
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slide-up-delay {
    animation: slideUp 1s ease-out 0.3s forwards;
  }
</style>
