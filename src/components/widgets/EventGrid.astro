---
import { Icon } from 'astro-icon/components';
import Image from '../common/Image.astro';
import { twMerge } from 'tailwind-merge';

export interface Event {
  title?: string;
  description?: string;
  image: string;
  link?: string;
  imageClass?: string;
  badgeImage?: string;
  date?: string;
  descriptionLink?: string;
}

interface Props {
  events: Event[];
  classes?: {
    container?: string;
    item?: string;
    itemContent?: string;
    textContent?: string;
    title?: string;
    description?: string;
    date?: string;
  };
}

const { events, classes } = Astro.props;
---

<div class={twMerge('grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 my-8', classes?.container)}>
  {
    events.map((event, index) => (
      <div
        class={twMerge('bg-white rounded-lg shadow-md overflow-hidden h-full fade-up', classes?.item)}
        style={`animation-delay: ${index * 100}ms;`}
      >
        <div class={twMerge('relative', classes?.itemContent)}>
          <div class="relative">
            <Image
              src={event.image}
              alt={event.title ?? ''}
              class={twMerge('w-full h-60 !object-top', event.imageClass)}
            />
            {event.badgeImage && (
              <div class="absolute top-0 right-0 bg-white rounded-l-lg p-4">
                <div class="w-6 h-6 min-[490px]:w-10 min-[490px]:h-10">
                  <Image
                    src={event.badgeImage}
                    alt={event.title}
                    class="w-6 h-6 min-[490px]:w-10 min-[490px]:h-10 !object-contain"
                  />
                </div>
              </div>
            )}
            {(event.title || event.description) && (
              <div class={twMerge('p-6', classes?.textContent)}>
                {event.title && <h3 class={twMerge('text-xl font-semibold mb-2', classes?.title)}>{event.title}</h3>}
                {event.date && <h3 class={twMerge('text-xl font-semibold mb-2', classes?.date)}>{event.date}</h3>}
                {event.description && (
                  <p class={twMerge('text-gray-600 mb-4 whitespace-pre-wrap', classes?.description)}>
                    {event.description}
                  </p>
                )}
                {event.descriptionLink && (
                  <a
                    href={event.descriptionLink}
                    class="text-primary hover:text-primary-dark"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    {event.descriptionLink}
                  </a>
                )}
              </div>
            )}
          </div>
          {event.link && (
            <div class="flex justify-center mt-auto pt-4 pb-6">
              <a href={event.link} class="text-primary hover:text-primary-dark flex items-center gap-2">
                ดูรายละเอียด
                <Icon name="tabler:arrow-right" class="w-4 h-4" />
              </a>
            </div>
          )}
        </div>
      </div>
    ))
  }
</div>

<style>
  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-up {
    opacity: 0;
    animation: fadeUp 0.6s ease-out forwards;
    animation-play-state: paused;
  }

  @media (prefers-reduced-motion: no-preference) {
    .fade-up {
      animation-play-state: running;
    }
  }

  .animate-on-scroll {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
    transition-delay: calc(var(--animation-order, 0) * 0.1s);
  }
  .animate-on-scroll.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>
