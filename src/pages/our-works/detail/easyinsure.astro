---
import Image from '~/components/common/Image.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import { environmentConfig } from '~/config';
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'ผลงาน Easyinsure | Our Works',
};

const screens = [1, 2, 3];
---

<Layout metadata={metadata}>
  <WidgetWrapper containerClass="max-w-7xl mx-auto">
    <div class="max-w-4xl mx-auto px-4 py-8 pt-12 lg:pt-0">
      <h2 class="text-3xl font-bold text-gray-800 border-b-2 border-primary pb-2 mb-6 animate-on-scroll">Easyinsure</h2>

      <p class="text-gray-700 mb-4 animate-on-scroll">
        พัฒนาระบบขายประกันภัยออนไลน์ ที่รองรับการปรับเปลี่ยนโปรโมชั่น การจัดการข้อมูลหน้าเว็บไซต์ แบบประกันได้เอง
        การสมัครสมาชิกผ่านช่องทาง Social ต่างๆ รวมถึงการเก็บเงินผ่าน Payment Gateway
      </p>

      <div class="flex justify-center mb-6 animate-on-scroll">
        <a
          href="https://www.easyinsure.co.th/"
          target="_blank"
          rel="noopener noreferrer"
          class="btn-primary sm:mb-0 break-all"
        >
          หน้าหลักของ Easy Insure
        </a>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-8">
        {
          screens.map((num) => (
            <Image
              src={`${environmentConfig.baseImageUrl}/images/easy_insure_screen/easy_insure_screen_${num}.webp`}
              alt={`Easyinsure ${num}`}
              class="w-full h-full rounded-lg shadow-md hover:shadow-lg transition duration-300 hover:scale-105 !object-left-top animate-on-scroll"
            />
          ))
        }
      </div>
    </div>
  </WidgetWrapper>
</Layout>
<style>
  .animate-on-scroll {
    opacity: 0;
    transition:
      opacity 0.6s,
      transform 0.6s;
    transition-delay: calc(var(--animation-order, 0) * 0.1s);
  }
  .animate-on-scroll.show {
    opacity: 1;
    animation: fadeInUp 0.6s ease-out;
  }
</style>

<script>
  function handleIntersection(entries, observer) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('show');
        observer.unobserve(entry.target);
      }
    });
  }

  const observer = new IntersectionObserver(handleIntersection, {
    root: null,
    rootMargin: '0px',
    threshold: 0.1,
  });

  document.addEventListener('astro:page-load', () => {
    const elements = document.querySelectorAll('.animate-on-scroll');
    elements.forEach((el) => observer.observe(el));
  });
</script>
