---
import Image from '~/components/common/Image.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import { environmentConfig } from '~/config';
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'โรงเรียนบ้านด่านกรงกราง',
};

const event = {
  date: 'วันที่ 12 กรกฎาคม พ.ศ. 2568',
  title: 'Barcamp Khonkaen ครั้งที่ 1',
  description: `    บริษัทฯ มีความยินดีอย่างยิ่งที่ได้ร่วมเป็นส่วนหนึ่งในการสนับสนุนการจัดงาน Barcamp Khonkaen ครั้งที่ 1 ณ อุทยานวิทยาศาสตร์ มหาวิทยาลัยขอนแก่น ในโอกาสนี้ คณะผู้บริหารและทีมงานของบริษัทฯ ได้ร่วมเป็นส่วนหนึ่งในการถ่ายทอดองค์ความรู้ แบ่งปันประสบการณ์จริงจากการทำงานในอุตสาหกรรมดิจิทัล เพื่อส่งเสริมและสนับสนุนการเรียนรู้ของเยาวชน คนรุ่นใหม่ รวมถึงผู้ที่สนใจในสายงานเทคโนโลยี ทั้งนี้ บริษัทฯ ขอขอบคุณทีมผู้จัดงานและอุทยานวิทยาศาสตร์ มหาวิทยาลัยขอนแก่น ที่ได้ดำเนินการจัดงาน ทั้งในด้านการจัดการสถานที่ การดูแลผู้เข้าร่วม และการสร้างบรรยากาศที่เอื้อต่อการเรียนรู้ร่วมกันอย่างสร้างสรรค์ ทำให้งานเป็นไปด้วยความราบรื่นและประสบความสำเร็จอย่างดียิ่ง บริษัทฯ มีความมุ่งมั่นที่จะร่วมเป็นส่วนหนึ่งในการสนับสนุนกิจกรรมเพื่อการพัฒนาองค์ความรู้ และการสร้างเครือข่ายความร่วมมือในแวดวงเทคโนโลยีต่อไปอย่างต่อเนื่อง`,
  image: `~/assets/images/รูปปกbarcamp.webp`,
};

const images = [
  {
    src: `~/assets/images/รูปปกbarcamp.webp`,
    alt: 'ภาพปก',
  },
  {
    src: `~/assets/images/barcamp1.webp`,
    alt: 'ภาพ 1',
  },
  {
    src: `~/assets/images/barcamp2.webp`,
    alt: 'ภาพ 2',
  },
  {
    src: `~/assets/images/barcamp3.webp`,
    alt: 'ภาพ 3',
  },
  {
    src: `~/assets/images/barcamp4.webp`,
    alt: 'ภาพ 4',
  },
  {
    src: `~/assets/images/barcamp5.webp`,
    alt: 'ภาพ 5',
  },
];
---

<Layout metadata={metadata}>
  <WidgetWrapper containerClass="max-w-7xl mx-auto">
    <Headline title="" subtitle={event.title} classes={{ container: 'pt-12 lg:pt-0' }} />
    <div class="p-6">
      <p class="text-gray-600 mb-4 whitespace-pre-wrap">{event.date}</p>
      <p class="text-gray-600 mb-4 whitespace-pre-wrap">{event.description}</p>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-8 mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
      {
        images.map((image, index) => (
          <div
            class="overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 fade-up-element image-container"
            style={`--delay: ${index * 0.1}s`}
          >
            <Image
              src={image.src}
              alt={image.alt}
              class="w-full h-full md:h-72 !object-cover !object-center image-scale"
            />
          </div>
        ))
      }
    </div>
  </WidgetWrapper>
</Layout>

<style>
  .fade-up-element {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
    transition-delay: var(--delay, 0s);
  }
  .fade-up-element.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
  .image-container {
    overflow: hidden;
  }
  .image-scale {
    transition: transform 0.3s ease-in-out;
  }
  .image-container:hover .image-scale {
    transform: scale(1.1);
  }
</style>

<script>
  function handleIntersection(entries, observer) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible');
        observer.unobserve(entry.target);
      }
    });
  }

  const observer = new IntersectionObserver(handleIntersection, {
    root: null,
    rootMargin: '0px',
    threshold: 0.1,
  });

  document.addEventListener('astro:page-load', () => {
    const elements = document.querySelectorAll('.fade-up-element');
    elements.forEach((el) => observer.observe(el));
  });
</script>
