---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Features as Props } from '~/types';
import ItemGrid3 from '../ui/ItemGrid3.astro';
import Button from '../ui/Button.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
  callToAction1,
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid3
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      container:
        'gap-4 lg:gap-6 max-w-7xl mx-auto grid grid-cols-1 min-[390px]:grid-cols-2 md:grid-cols-3 lg:grid-cols-6',
      panel:
        'gap-1 min-h-[150px] min-[390px]:min-h-[180px]  min-w-[150px] mx-auto animate-on-scroll rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 py-5 px-2.5 flex-col items-center h-full justify-center',
      icon: 'min-w-[100px] w-full h-auto text-primary mr-0 rtl:mr-0 rtl:ml-0',
      description: 'text-sm md:text-base',
      detail: 'mt-auto',
      image: 'mx-auto',
      ...((classes?.items as Record<string, never>) ?? {}),
    }}
  />
  {
    callToAction1 && (
      <div class="mt-8 text-primary text-center">
        <Button variant="link" {...callToAction1} />
      </div>
    )
  }
</WidgetWrapper>

<script>
  function handleIntersection(entries: IntersectionObserverEntry[]) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('show');
      }
    });
  }

  const observer = new IntersectionObserver(handleIntersection, {
    root: null,
    rootMargin: '0px',
    threshold: 0.1,
  });

  document.addEventListener('astro:page-load', () => {
    const elements = document.querySelectorAll('.animate-on-scroll');
    elements.forEach((el) => observer.observe(el));
  });
</script>
